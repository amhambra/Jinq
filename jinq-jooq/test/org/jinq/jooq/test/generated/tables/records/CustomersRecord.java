/*
 * This file is generated by jOOQ.
 */
package org.jinq.jooq.test.generated.tables.records;


import org.jinq.jooq.test.generated.tables.Customers;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomersRecord extends UpdatableRecordImpl<CustomersRecord> implements Record5<Integer, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>APP.CUSTOMERS.CUSTOMERID</code>.
     */
    public void setCustomerid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.CUSTOMERS.CUSTOMERID</code>.
     */
    public Integer getCustomerid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>APP.CUSTOMERS.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.CUSTOMERS.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>APP.CUSTOMERS.COUNTRY</code>.
     */
    public void setCountry(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.CUSTOMERS.COUNTRY</code>.
     */
    public String getCountry() {
        return (String) get(2);
    }

    /**
     * Setter for <code>APP.CUSTOMERS.DEBT</code>.
     */
    public void setDebt(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>APP.CUSTOMERS.DEBT</code>.
     */
    public Integer getDebt() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>APP.CUSTOMERS.SALARY</code>.
     */
    public void setSalary(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>APP.CUSTOMERS.SALARY</code>.
     */
    public Integer getSalary() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Customers.CUSTOMERS.CUSTOMERID;
    }

    @Override
    public Field<String> field2() {
        return Customers.CUSTOMERS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Customers.CUSTOMERS.COUNTRY;
    }

    @Override
    public Field<Integer> field4() {
        return Customers.CUSTOMERS.DEBT;
    }

    @Override
    public Field<Integer> field5() {
        return Customers.CUSTOMERS.SALARY;
    }

    @Override
    public Integer component1() {
        return getCustomerid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCountry();
    }

    @Override
    public Integer component4() {
        return getDebt();
    }

    @Override
    public Integer component5() {
        return getSalary();
    }

    @Override
    public Integer value1() {
        return getCustomerid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCountry();
    }

    @Override
    public Integer value4() {
        return getDebt();
    }

    @Override
    public Integer value5() {
        return getSalary();
    }

    @Override
    public CustomersRecord value1(Integer value) {
        setCustomerid(value);
        return this;
    }

    @Override
    public CustomersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CustomersRecord value3(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public CustomersRecord value4(Integer value) {
        setDebt(value);
        return this;
    }

    @Override
    public CustomersRecord value5(Integer value) {
        setSalary(value);
        return this;
    }

    @Override
    public CustomersRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomersRecord
     */
    public CustomersRecord() {
        super(Customers.CUSTOMERS);
    }

    /**
     * Create a detached, initialised CustomersRecord
     */
    public CustomersRecord(Integer customerid, String name, String country, Integer debt, Integer salary) {
        super(Customers.CUSTOMERS);

        setCustomerid(customerid);
        setName(name);
        setCountry(country);
        setDebt(debt);
        setSalary(salary);
    }
}
